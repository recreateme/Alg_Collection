'''
给你一个有序数组 nums ，请你 原地 删除重复出现的元素，使得出现次数超过两次的元素只出现两次 ，返回删除后数组的新长度。
不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。

示例 1：

输入：nums = [1,1,1,2,2,3]
输出：5, nums = [1,1,2,2,3]
解释：函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3。 不需要考虑数组中超出新长度后面的元素。
示例 2：

输入：nums = [0,0,1,1,1,1,2,3,3]
输出：7, nums = [0,0,1,1,2,3,3]
解释：函数应返回新长度 length = 7, 并且原数组的前七个元素被修改为 0, 0, 1, 1, 2, 3, 3。不需要考虑数组中超出新长度后面的元素。
'''


def removeDuplicates(nums):
    # 如果数组长度小于等于2，则无需删除重复元素
    if len(nums) <= 2:
        return len(nums)

    i = 1  # 慢指针从第二个元素开始（前两个元素必然有效）
    for j in range(2, len(nums)):  # 快指针从第三个元素开始
        if nums[j] != nums[i - 1]:  # 检查是否超过两次重复
            i += 1
            nums[i] = nums[j]
    return i + 1

